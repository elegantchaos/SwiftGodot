// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
#if canImport(Darwin)
import Darwin
#elseif os(Windows)
import ucrt
import WinSDK
#elseif canImport(Glibc)
import Glibc
#elseif canImport(Musl)
import Musl
#else
#error("Unable to identify your C library.")
#endif
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A ``MultiplayerPeer`` which is always connected and acts as a server.
/// 
/// This is the default ``MultiplayerAPI/multiplayerPeer`` for the ``Node/multiplayer``. It mimics the behavior of a server with no peers connected.
/// 
/// This means that the ``SceneTree`` will act as the multiplayer authority by default. Calls to ``MultiplayerAPI/isServer()`` will return `true`, and calls to ``MultiplayerAPI/getUniqueId()`` will return ``MultiplayerPeer/targetPeerServer``.
/// 
open class OfflineMultiplayerPeer: MultiplayerPeer {
    override open class var godotClassName: StringName { "OfflineMultiplayerPeer" }
}

